apiVersion: apps/v1
kind: Deployment
metadata:
  name: foodybuddy-gateway
  namespace: foodybuddy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: foodybuddy-gateway
  template:
    metadata:
      labels:
        app: foodybuddy-gateway
    spec:
      containers:
      - name: foodybuddy-gateway
        image: foodybuddy.prod.gateway:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        # Database Configuration
        - name: DB_HOST
          value: "postgres-db-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "foodybuddy"
        - name: DB_USERNAME
          value: "foodybuddy_user"
        - name: DB_PASSWORD
          value: "foodybuddy_password"
        - name: DB_SCHEMA_GATEWAY
          value: "gateway"
        # Service URLs Configuration
        - name: ORDERS_SERVICE_URL
          value: "http://foodybuddy-orders:8081"
        - name: PAYMENTS_SERVICE_URL
          value: "http://foodybuddy-payments:8082"
        - name: WEB_SERVICE_URL
          value: "http://foodybuddy-web-service:3000"
        - name: ORDERS_SERVICE_CREATE_ENDPOINT
          value: "/api/orders"
        - name: ORDERS_SERVICE_STATUS_ENDPOINT
          value: "/api/orders/{orderId}/status"
        - name: PAYMENTS_SERVICE_PROCESS_ENDPOINT
          value: "/api/payments/process"
        - name: PAYMENTS_SERVICE_REFUND_ENDPOINT
          value: "/api/payments/{paymentId}/refund"
        # JPA Configuration
        - name: JPA_SHOW_SQL
          value: "false"
        - name: JPA_HIBERNATE_DDL_AUTO
          value: "validate"
        # Logging Configuration
        - name: LOG_LEVEL_GATEWAY
          value: "INFO"
        - name: LOG_PATTERN_CONSOLE
          value: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
      restartPolicy: Always
