version: '3.8'

services:
  # Single PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres-foodybuddy-prod
    environment:
      POSTGRES_DB: foodybuddy
      POSTGRES_USER: foodybuddy_user
      POSTGRES_PASSWORD: foodybuddy_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-schemas.sql:/docker-entrypoint-initdb.d/init-schemas.sql
    networks:
      - foodybuddy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U foodybuddy_user -d foodybuddy"]
      interval: 10s
      timeout: 5s
      retries: 5

  foodybuddy-web:
    build: 
      context: ./foodybuddy-web
      dockerfile: Dockerfile
    image: foodybuddy.prod.web:latest
    container_name: foodybuddy-web-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8080
      - PORT=3000
      - HOSTNAME=0.0.0.0
      - NEXT_LOG_LEVEL=info
    depends_on:
      - foodybuddy-gateway
    networks:
      - foodybuddy-network
    restart: unless-stopped

  foodybuddy-gateway:
    build: 
      context: ./foodybuddy-gateway
      dockerfile: Dockerfile
    image: foodybuddy.prod.gateway:latest
    container_name: foodybuddy-gateway-prod
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      # Database Configuration
      - DB_HOST=postgres-db-service
      - DB_PORT=5432
      - DB_NAME=foodybuddy
      - DB_USERNAME=foodybuddy_user
      - DB_PASSWORD=foodybuddy_password
      - DB_SCHEMA_GATEWAY=gateway
      # Service URLs Configuration
      - ORDERS_SERVICE_URL=http://foodybuddy-orders:8081
      - PAYMENTS_SERVICE_URL=http://foodybuddy-payments:8082
      - WEB_SERVICE_URL=http://foodybuddy-web-service:3000
      - ORDERS_SERVICE_CREATE_ENDPOINT=/api/orders
      - ORDERS_SERVICE_STATUS_ENDPOINT=/api/orders/{orderId}/status
      - PAYMENTS_SERVICE_PROCESS_ENDPOINT=/api/payments/process
      - PAYMENTS_SERVICE_REFUND_ENDPOINT=/api/payments/{paymentId}/refund
      # JPA Configuration
      - JPA_SHOW_SQL=false
      - JPA_HIBERNATE_DDL_AUTO=validate
      # Logging Configuration
      - LOG_LEVEL_GATEWAY=INFO
      - LOG_PATTERN_CONSOLE=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
    depends_on:
      - postgres
      - foodybuddy-orders
      - foodybuddy-payments
    networks:
      - foodybuddy-network
    restart: unless-stopped

  foodybuddy-orders:
    build: 
      context: ./foodybuddy-orders
      dockerfile: Dockerfile
    image: foodybuddy.prod.orders:latest
    container_name: foodybuddy-orders-prod
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      # Database Configuration
      - DB_HOST=postgres-db-service
      - DB_PORT=5432
      - DB_NAME=foodybuddy
      - DB_USERNAME=foodybuddy_user
      - DB_PASSWORD=foodybuddy_password
      - DB_SCHEMA_ORDERS=orders
      # Service URLs Configuration
      - GATEWAY_URL=http://foodybuddy-gateway:8080
      # JPA Configuration
      - JPA_SHOW_SQL=false
      - JPA_HIBERNATE_DDL_AUTO=validate
      - JPA_FORMAT_SQL=false
      # Logging Configuration
      - LOG_LEVEL_ORDERS=INFO
      - LOG_PATTERN_CONSOLE=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
    depends_on:
      - postgres
    networks:
      - foodybuddy-network
    restart: unless-stopped

  foodybuddy-payments:
    build: 
      context: ./foodybuddy-payments
      dockerfile: Dockerfile
    image: foodybuddy.prod.payments:latest
    container_name: foodybuddy-payments-prod
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      # Database Configuration
      - DB_HOST=postgres-db-service
      - DB_PORT=5432
      - DB_NAME=foodybuddy
      - DB_USERNAME=foodybuddy_user
      - DB_PASSWORD=foodybuddy_password
      - DB_SCHEMA_PAYMENTS=payments
      # JPA Configuration
      - JPA_SHOW_SQL=false
      - JPA_HIBERNATE_DDL_AUTO=validate
      # Payment Processing Configuration
      - PAYMENT_TIMEOUT=30000
      - PAYMENT_RETRY_ATTEMPTS=3
      - PAYMENT_SUCCESS_RATE=0.9
      - PAYMENT_SIMULATION_ENABLED=true
      - PAYMENT_PROCESSING_DELAY=2000
      # Logging Configuration
      - LOG_LEVEL_PAYMENTS=INFO
      - LOG_PATTERN_CONSOLE=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
    depends_on:
      - postgres
    networks:
      - foodybuddy-network
    restart: unless-stopped

networks:
  foodybuddy-network:
    driver: bridge
    name: foodybuddy-network-prod

volumes:
  postgres-data:
    name: foodybuddy-postgres-single-db-prod